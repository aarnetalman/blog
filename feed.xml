<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://talman.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://talman.io/" rel="alternate" type="text/html" /><updated>2021-02-23T06:33:19-06:00</updated><id>https://talman.io/feed.xml</id><title type="html">Aarne Talman</title><subtitle>Natural Language Processing and Machine Learning</subtitle><entry><title type="html">Training PyTorch Transformers on GCP AI Platform</title><link href="https://talman.io/2021/02/23/training-transformer-model-gcp-ai-platform.html" rel="alternate" type="text/html" title="Training PyTorch Transformers on GCP AI Platform" /><published>2021-02-23T00:00:00-06:00</published><updated>2021-02-23T00:00:00-06:00</updated><id>https://talman.io/2021/02/23/training-transformer-model-gcp-ai-platform</id><author><name></name></author><summary type="html">Google Cloud Platform (GCP) is widely known for its great AI and machine learning capabilities and products. In fact there are tons of material available on how you can train and deploy TensorFlow models on GCP. However, GCP is not just for people using TensorFlow. It has good support for other frameworks as well. In this post I will show how to use another highly popular ML framework PyTorch on AI Platform Training. I will show how to fine-tune a state-of-the-art sequence classification model using PyTorch and the transformers library. We will be using a pre-trained RoBERTa as the transformer model for this task.</summary></entry><entry><title type="html">Simple Bag-of-Words Search Engine in Python</title><link href="https://talman.io/information_retrieval/python/demo/2020/12/30/simple-search-engine-with-bm25.html" rel="alternate" type="text/html" title="Simple Bag-of-Words Search Engine in Python" /><published>2020-12-30T00:00:00-06:00</published><updated>2020-12-30T00:00:00-06:00</updated><id>https://talman.io/information_retrieval/python/demo/2020/12/30/simple-search-engine-with-bm25</id><author><name>Aarne Talman</name></author><category term="information_retrieval" /><category term="python" /><category term="demo" /><summary type="html"></summary></entry><entry><title type="html">Semantic Search with Pre-trained Sentence Encoders</title><link href="https://talman.io/information_retrieval/demo/2020/12/14/simple-semantic-search-engine-with-transformers.html" rel="alternate" type="text/html" title="Semantic Search with Pre-trained Sentence Encoders" /><published>2020-12-14T00:00:00-06:00</published><updated>2020-12-14T00:00:00-06:00</updated><id>https://talman.io/information_retrieval/demo/2020/12/14/simple-semantic-search-engine-with-transformers</id><author><name>Aarne Talman</name></author><category term="information_retrieval" /><category term="demo" /><summary type="html"></summary></entry><entry><title type="html">Article Ranking with Natural Language Inference</title><link href="https://talman.io/nli/pytorch/demo/2020/12/12/article-ranking-with-an-nli-model.html" rel="alternate" type="text/html" title="Article Ranking with Natural Language Inference" /><published>2020-12-12T00:00:00-06:00</published><updated>2020-12-12T00:00:00-06:00</updated><id>https://talman.io/nli/pytorch/demo/2020/12/12/article-ranking-with-an-nli-model</id><author><name>Aarne Talman</name></author><category term="nli" /><category term="pytorch" /><category term="demo" /><summary type="html"></summary></entry><entry><title type="html">Natural Language Inference with PyTorch and Transformers</title><link href="https://talman.io/nli/pytorch/demo/2020/12/11/natural-language-inference-with-pytorch-and-transformers.html" rel="alternate" type="text/html" title="Natural Language Inference with PyTorch and Transformers" /><published>2020-12-11T00:00:00-06:00</published><updated>2020-12-11T00:00:00-06:00</updated><id>https://talman.io/nli/pytorch/demo/2020/12/11/natural-language-inference-with-pytorch-and-transformers</id><author><name>Aarne Talman</name></author><category term="nli" /><category term="pytorch" /><category term="demo" /><summary type="html"></summary></entry></feed>